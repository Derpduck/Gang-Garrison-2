<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if instance_exists(MenuController) or instance_exists(Console) exit;

if keyboard_check_pressed(global.chatHideCtrl) and !isTyping{
    offset=0
    if visible==1{
        visible=0
    }else if visible==0{
        visible=1
    }
}

if isTyping{
    keyboard_string=string_copy(keyboard_string,0,CHAT_MAX_STRING_LENGTH-1)
}

if keyboard_check_pressed(global.chatToggleCtrl) and !isTyping and visible==1{
    hidden=not hidden
    offset=0
    if keyboard_string==""{
        chat_go_idle(1)
    }else{
        chat_go_idle(1)
    }
}else if keyboard_check_pressed(global.chatGlobalCtrl) and !isTyping and visible==1{
    isTyping=CHAT_PUBLIC_MESSAGE
    global.isChatting=1
    keyboard_string= ""
    
    hidden=false
    alarm[0]=blink_speed/global.delta_factor
    
    placeholderMsg=placeholderMsgGlobal
}else if keyboard_check_pressed(global.chatTeamCtrl) and !isTyping and visible==1{
    isTyping = CHAT_PRIV_MESSAGE
    global.isChatting=1
    keyboard_string = ""
    
    hidden=false
    alarm[0]=blink_speed/global.delta_factor
    
    placeholderMsg=placeholderMsgTeam
}else if isTyping!=false and keyboard_check_pressed(vk_enter) and visible==1{
    if keyboard_string!=""{
        offset=0
        var str;
        str=string_copy(keyboard_string,0,CHAT_MAX_STRING_LENGTH-1)
        
        //local chat command
        if string_char_at(str,0)=="/"{
            localCommand=string_delete(str,1,1)
            event_user(0)
        }else{
            //otherwise just send it as normal
            write_ubyte(global.serverSocket, isTyping) // Will be either CHAT_PUBLIC_MESSAGE or CHAT_PRIV_MESSAGE
            write_ubyte(global.serverSocket, string_length(str))
            write_string(global.serverSocket, str)
            socket_send(global.serverSocket)
        }
    }
    
    isTyping=false
    hidden=true
    global.isChatting=0
    if keyboard_string==""{
        chat_go_idle(1)
    }else{
        chat_go_idle(1)
    }
    keyboard_string=""
    alarm[0]=-1
    blinking_underscore=false
}

if isTyping!=false{        
    global.isChatting=1
    if (keyboard_check_pressed(vk_up) or mouse_wheel_up()) and ds_list_size(chatLog) &gt; 9{
        offset = min(ds_list_size(chatLog)-10,offset+1)
    }else if keyboard_check_pressed(vk_down) or mouse_wheel_down(){
        offset = max(0,offset-1)
    }
}else{
    global.isChatting=0
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
