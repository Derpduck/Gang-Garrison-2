<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xoffset=view_xview[0]
yoffset=view_yview[0]
xsize=view_wview[0]+xoffset
ysize=view_hview[0]+yoffset
spacing=16

// top left
console_x1=xoffset
console_y1=ysize-295
// bottom right
console_x2=xsize
console_y2=ysize
textOffset=6

draw_set_alpha(0.75)
draw_set_color(c_black);

// big black box
draw_rectangle(console_x1+4,console_y1+21,console_x2-4,console_y2-36,false)
//text box
//align from the bottom
draw_rectangle(console_x1+4,console_y2-31,console_x2-4,console_y2-11,false)

//text
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_color(c_white)
draw_set_font(global.consoleFont)
var offset;
draw_set_alpha(1)
//draw text in input field
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_text(console_x1+textOffset,console_y2-20,current_text)
if cursor_moving or blink{
    draw_set_halign(fa_left)
    draw_set_valign(fa_middle)
    offset = string_width(string_copy(current_text, 0, cursor_position))
    draw_set_color(make_color_rgb(010,200,010))
    draw_text(console_x1 + textOffset + offset - 2, console_y2-20, cursor_character)
    draw_set_color(c_white)
}

// Draw the whole log
var message;
for(i=0; i&lt;ds_list_size(global.consoleLog); i+=1){
    
    message = ds_list_find_value(global.consoleLog, ds_list_size(global.consoleLog)-1-i)
    switch string_copy(message, 0, 3){
        case "/:/":// If a color-code was included.
            draw_set_color(getColorCode(string_copy(message, 4, COLOR_RGB_LENGTH)))
            draw_text(console_x1+textOffset+6, (console_y2 - 57)-i*spacing, string_copy(message, 4+COLOR_RGB_LENGTH, string_length(message)-(4+COLOR_RGB_LENGTH-1)))
            break

        default:
            draw_set_color(c_white)
            draw_text(console_x1+textOffset, (console_y2-57)-i*spacing, message)
            break
    }
}
draw_set_font(global.gg2Font)
</argument>
      </arguments>
    </action>
  </actions>
</event>
