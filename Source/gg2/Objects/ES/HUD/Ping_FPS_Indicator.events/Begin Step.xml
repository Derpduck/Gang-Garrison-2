<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="1">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if instance_number(Ping_FPS_Indicator)&gt;1 instance_destroy()
if !global.isHost{
    if cooldown&lt;=0{
        if(!pingRunning){
            pingSocket=tcp_connect(global.serverIP,global.serverPort)
            pingStartTime=current_time
            pingRunning=true
        }else{
            if(not socket_connecting(pingSocket)){
                if(socket_has_error(pingSocket)){
                    ping=-1
                }else{
                    ping=current_time-pingStartTime
                    ds_list_insert(pingGraphList,ds_list_size(pingGraphList)-1,ping)
                }
                global.myPing=ping
                if global.myPing==-1{
                    global.myPing=0
                }
                socket_destroy_abortive(pingSocket)
                pingRunning=false;
                cooldown = cooldownTime
                
                write_ubyte(global.serverSocket, PLAYER_PING)
                write_ushort(global.serverSocket, global.myPing)
                socket_send(global.serverSocket)
            }
        }
    }else{
        cooldown-=1*global.delta_factor
    }
}

//store last 84 data points for the graph, delete the oldest one every time a new one is made
if ds_list_size(pingGraphList)&gt;=84{
    ds_list_delete(pingGraphList,0)
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
