<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="10">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//Create a list for picking players
pickingList=""
ds_list_clear(pickingPlayers)

for (i=0; i&lt;ds_list_size(global.players); i+=1){
    player=ds_list_find_value(global.players, i)
    
    if player.team==TEAM_SPECTATOR{
        ds_list_add(pickingPlayers,player)
        pickingList+=C_GREEN+string(ds_list_size(pickingPlayers))+". "+C_WHITE+sanitiseNewlines(player.name)+" "
    }
}

var colour,teamString;
if teamToPick==0{
    colour=P_RED
    teamString="RED"
}
if teamToPick==1{
    colour=P_BLUE
    teamString="BLUE"
}

var message;
message = global.chatPrintPrefix+colour+teamString+"'s pick: "+ pickingList
write_ubyte(global.publicChatBuffer, CHAT_PUBLIC_MESSAGE)
write_ushort(global.publicChatBuffer, string_length(message))
write_string(global.publicChatBuffer, message)
write_byte(global.publicChatBuffer,-1)
print_to_chat(message);// For the host
</argument>
      </arguments>
    </action>
  </actions>
</event>
