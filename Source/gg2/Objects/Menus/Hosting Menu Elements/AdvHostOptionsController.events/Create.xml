<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">menu_create(128, 100, 500, 260, 32, 0, 96, 16);
menumode = true;

menu_background(512, 24, 8, 12, 4);
bgtabs = true;

if (room == Menu)
{
    menu_addedit_num("Hosting Port:", "global.hostingPort", '
        gg2_write_ini("Settings", "HostingPort", argument0);
    ', 65535);
}

menu_addedit_script("Map Rotation:", menu_format_maprotation_filepath(global.mapRotationFile), '
    var absPath;

    absPath = get_open_filename("Map Rotation|*.txt", "");

    if (absPath == "") {
        global.mapRotationFile = absPath;
    } else {
        global.mapRotationFile = getRelativePathIfDescendand(working_directory + "\", absPath);
    }
    
    gg2_write_ini("Server", "MapRotation", global.mapRotationFile);
    
    load_map_rotation();
    return menu_format_maprotation_filepath(global.mapRotationFile);
');

menu_addedit_select("Shuffle map rotation:", "global.shuffleRotation", '
    gg2_write_ini("Server", "ShuffleRotation", argument0);
');
menu_add_option(0, "Don't shuffle");
menu_add_option(1, "Shuffle (no arena initial map)");
menu_add_option(2, "Shuffle without bias");

menu_addedit_boolean("Auto Balance:", "global.autobalance", '
    gg2_write_ini("Server", "AutoBalance", argument0);
');
menu_addedit_boolean("Announce to Lobby:", "global.useLobbyServer", '
    gg2_write_ini("Settings", "UseLobby", argument0);
');
if (room == Menu)
{
    menu_addedit_boolean("Attempt UPnP Forwarding:", "global.attemptPortForward", '
        gg2_write_ini("Server", "Attempt UPnP Forwarding", argument0);
    ');
}

if (room == Menu)
{
    menu_addlink("Start Game", '
        start_server();
    ');
}

menu_addtablink("Server", '
    instance_create(x,y,HostOptionsController);
    instance_destroy();
');
menu_addtablink("Adv. Server", '
    instance_create(x,y,AdvHostOptionsController);
    instance_destroy();
');
menu_addtablink("Classlimits", '
    instance_create(x,y,ClasslimitsMenuController);
    instance_destroy();
');

menu_addback("Back", '
    instance_destroy();
    if (room == Menu)
        instance_create(x,y,MainMenuController);
    else
        instance_create(0,0,InGameMenuController);
');
</argument>
      </arguments>
    </action>
  </actions>
</event>
