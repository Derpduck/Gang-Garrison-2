<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if colour1==0 and colour2==0{
    colour1=make_color_rgb(random_range(0,255),random_range(0,255),random_range(0,255))
    colour2=make_color_rgb(random_range(0,255),random_range(0,255),random_range(0,255))
}

xoffset=view_xview[0]
yoffset=view_yview[0]
xsize=view_wview[0]
ysize=view_hview[0]

var i, server;
draw_set_color(c_black);
draw_set_alpha(0.5);

draw_pinched_blackrect(xoffset+xbegin-8, yoffset+ybegin-16, width+32, 408, 4, 3);
draw_pinched_blackrect(xoffset+xbegin-8, yoffset+ybegin-48, 192, 24, 4, false);

draw_set_alpha(1);
draw_set_color(c_white);
draw_set_valign(fa_top);

/* Let the user know the servers are loading */
if (lobbysocket != -1)
    headerstring = "Loading...";
else
    headerstring = "Servers ("+string(ds_list_size(servers))+"/"+string(numServers)+") ";

draw_set_halign(fa_left);
draw_text(xoffset+xbegin, yoffset+ybegin-41, headerstring);

for(i=offset; i&lt;ds_list_size(servers) and i&lt;offset+items; i+=1)
{
    var pixeloffset;
    pixeloffset = spacing*(i-offset)-3;
    server = ds_list_find_value(servers, i);
    
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_pinched_blackrect(xoffset+xbegin, yoffset+ybegin+pixeloffset-5, width, 32, 4, 1);
    
    draw_set_alpha(1);
    if(i==virtualitem) {
        if global.dsmTextColour==0{
            draw_set_color(c_red)
        }else if global.dsmTextColour==1{
            draw_set_color(c_blue)
        }else if global.dsmTextColour==2{
            draw_set_color(c_green)
        }else if global.dsmTextColour==3{
            draw_set_color(c_yellow)
        }else if global.dsmTextColour==4{
            draw_set_color(c_purple)
        }else if global.dsmTextColour==5{
            draw_set_color(colour1)
        }
    } else if(server.compatible) {
        draw_set_color(c_white);
    } else {
        draw_set_color(c_gray);
    }
    
    draw_set_halign(fa_left);
    if(server.private)
        draw_sprite(ControlPointLockS,0,xoffset+xbegin,yoffset+ybegin+pixeloffset+5);
    draw_text(xoffset+xbegin+10, yoffset+ybegin+pixeloffset,"["+sanitiseNewlines(server.playerstring)+"]");
    draw_text(xoffset+xbegin+95, yoffset+ybegin+pixeloffset,sanitiseNewlines(server.name));
    if(ds_map_exists(server.infos, "map"))
        draw_text(xoffset+xbegin+95,  yoffset+ybegin+pixeloffset,'#'+sanitiseNewlines(ds_map_find_value(server.infos, "map")));
    
    draw_set_halign(fa_right);
    draw_text(xoffset+xbegin+425, yoffset+ybegin+pixeloffset,sanitiseNewlines(server.shortgame));
    
    /* Draw latency and color indicators */
    if(server.pingFinished) {
        docol = c_red;
        showping = string(server.ping);
        if (server.ping &lt; 240) {
            docol = c_yellow;
        }
        if (server.ping &lt; 135) {
            docol = c_green;
        }
        if (server.ping &lt; 75) {
            docol = c_aqua;
        }
        if (server.ping == -1) {
            docol = c_gray;
            showping = "TIMEOUT";
        }

        draw_text_color(xoffset+xbegin+425, yoffset+ybegin+pixeloffset,"#"+showping,docol,docol,docol,docol,1);
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
