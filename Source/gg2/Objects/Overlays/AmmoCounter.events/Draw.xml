<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if global.drawAmmoHUD==0 exit;

var xoffset, yoffset, xsize, ysize;
xoffset = view_xview[0]-800+view_wview[0]; // i'm not going to fix this the proper way for EVERY SINGLE WEAPON HHNGNGH GOD
yoffset = view_yview[0]-600+view_hview[0];
xsize = 800;
ysize = 600;
draw_set_alpha(1)
draw_set_halign(fa_right)

if global.myself.object != -1{
    if instance_exists(global.myself.object.currentWeapon){
        var ammoText,barValue;
        //Ammo Text
        if global.myself.class!=CLASS_HEAVY{
            ammoText=floor(global.myself.object.currentWeapon.ammoCount)
        }else if global.myself.class==CLASS_HEAVY{
            ammoText=floor(global.myself.object.currentWeapon.ammoCount/global.myself.object.currentWeapon.ammoCost)
        }
        //Bar Value
        if global.myself.class!=CLASS_PYRO and global.myself.class!=CLASS_HEAVY and global.myself.class!=CLASS_QUOTE{
            barValue=100-global.myself.object.currentWeapon.alarm[5]*global.delta_factor/global.myself.object.currentWeapon.reloadTime*100
        }else if global.myself.class==CLASS_PYRO{
            barValue=global.myself.object.currentWeapon.ammoCount/2
        }else if global.myself.class==CLASS_HEAVY or global.myself.class==CLASS_QUOTE{
            barValue=global.myself.object.currentWeapon.ammoCount/global.myself.object.currentWeapon.maxAmmo*100
        }
        //Draw the hud
        if global.bigAmmoNumbers==1{
            var scale;
            scale=3
            draw_set_valign(fa_center)
            draw_set_halign(fa_right)
            
            col_custom=color_code_split(global.ammoColourRGB)
            
            draw_text_transformed_color(xoffset+xsize-114+2, yoffset+ysize-60+2, max(0,ammoText), scale, scale, 0, c_black, c_black, c_black, c_black, 1)
            draw_text_transformed_color(xoffset+xsize-114, yoffset+ysize-60, max(0,ammoText), scale, scale, 0, col_custom, col_custom, col_custom, col_custom, 1)
        }else if global.boxHUD==0{
            barcolor = make_color_rgb(217,217,183);
            draw_set_color(barcolor);
            draw_sprite_ext(AmmoHUD,0,xoffset+728,yoffset+ysize/1.26+86,2,2,0,c_white,1);
            draw_text(xoffset+775,yoffset+ysize/1.26+95,max(0,ammoText))
            draw_healthbar(xoffset+714,yoffset+ysize/1.26+90,xoffset+748,yoffset+ysize/1.26+98,barValue,c_black,barcolor,barcolor,0,1,0)
        }else if global.boxHUD==1{
            var xoffset, yoffset, xsize, ysize;
            xoffset = view_xview[0]
            yoffset = view_yview[0]
            xsize = view_wview[0]
            ysize = view_hview[0]
            draw_set_color(c_black)
            draw_set_alpha(global.boxBgAlpha/100)
            
            draw_rectangle((xoffset+xsize-90),(yoffset+ysize)-37,(xoffset+xsize-23),(yoffset+ysize)-37+16,0)
            
            draw_set_alpha(global.boxElementAlpha/100)
            draw_set_color(make_color_rgb(50,200,50))
            if floor(global.myself.object.currentWeapon.ammoCount&lt;=0){
                draw_set_color(make_color_rgb(200,50,50))
            }
            
            draw_text((xoffset+xsize-25),(yoffset+ysize)-37+9,max(0,ammoText))
            draw_healthbar((xoffset+xsize-86),(yoffset+ysize)-37+4,(xoffset+xsize-52),(yoffset+ysize)-37+12,barValue,c_black,c_gray,c_white,0,1,0)
        }
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
