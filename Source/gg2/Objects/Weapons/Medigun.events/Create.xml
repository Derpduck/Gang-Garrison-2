<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xoffset = -7;
yoffset = 0;
refireTime = 3;
event_inherited();

healTarget = noone;
healedThisStep = false;
healAmount = 1
hphealed = 0;
maxHealDistance = 300;
ubering = false;
uberCharge=0;
uberReady=false;
maxAmmo = 30//40
ammoCount = maxAmmo;
reloadTime = 60//55;
reloadBuffer = 0;
idle=true;

uberChargeRate=2
healRampStartFactor=8
healRampBaseHealth=25
healRampReductionFactor=1.25

// Threshhold system numbers
//healTierHealth = 125; // HP above which healing is slowed
//healTierAmount = 0.75; // Factor to which healing is slowed (stacks with healing ramp)

if(golden){
    normalSprite = MedigunGoldS;
    recoilSprite = MedigunGoldFS;
    reloadSprite = MedigunGoldFRS;
}else{
    normalSprite = MedigunS;
    recoilSprite = MedigunFS;
    reloadSprite = MedigunFRS;
    
    if global.dumbledankSprites==1{
        normalSprite = MedigunSM;
        recoilSprite = MedigunFSM;
        reloadSprite = MedigunFRSM;
    }
}
sprite_index = normalSprite;

//This makes it so that the timer will keep resetting
//Until Mouse1 is let go
recoilTime = refireTime+1;
recoilAnimLength = sprite_get_number(recoilSprite)/2;
recoilImageSpeed = recoilAnimLength/recoilTime;

reloadAnimLength = sprite_get_number(reloadSprite)/2;
reloadImageSpeed = reloadAnimLength/reloadTime;
</argument>
      </arguments>
    </action>
  </actions>
</event>
